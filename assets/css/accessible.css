body {
  font-size: 1rem;
}

small {
  font-size: 0.8rem;
}

p {
  font-size: 1rem;
}

h1 {
  font-size: 4rem;
}

h2 {
  font-size: 2.667rem;
}

h3 {
  font-size: 1.778rem;
}

h4 {
  font-size: 1.5rem;
}

h5 {
  font-size: 1.25rem;
}

h6 {
  font-size: 1rem;
}

figcaption {
  font-size: 0.8rem;
}

._minor-second {
  font-size: 0.938rem;
}

._minor-second::after {
  content: " 11.1622px";
  font-size: 0.75rem;
}

._major-second {
  font-size: 0.889rem;
}

._major-second::after {
  content: " 10.5791px";
  font-size: 0.75rem;
}

._minor-third {
  font-size: 0.833rem;
}

._minor-third::after {
  content: " 9.9127px";
  font-size: 0.75rem;
}

._major-third {
  font-size: 0.8rem;
}

._major-third::after {
  content: " 9.52px";
  font-size: 0.75rem;
}

._perfect-fourth {
  font-size: 0.75rem;
}

._perfect-fourth::after {
  content: " 8.925px";
  font-size: 0.75rem;
}

._augmented-fourth {
  font-size: 0.707rem;
}

._augmented-fourth::after {
  content: " 8.4133px";
  font-size: 0.75rem;
}

._perfect-fifth {
  font-size: 0.667rem;
}

._perfect-fifth::after {
  content: " 7.9373px";
  font-size: 0.75rem;
}

._minor-sixth {
  font-size: 0.625rem;
}

._minor-sixth::after {
  content: " 7.4375px";
  font-size: 0.75rem;
}

._golden {
  font-size: 0.618rem;
}

._golden::after {
  content: " 7.3542px";
  font-size: 0.75rem;
}

._major-sixth {
  font-size: 0.577rem;
}

._major-sixth::after {
  content: " 6.8663px";
  font-size: 0.75rem;
}

._minor-seventh {
  font-size: 0.562rem;
}

._minor-seventh::after {
  content: " 6.6878px";
  font-size: 0.75rem;
}

._major-seventh {
  font-size: 0.533rem;
}

._major-seventh::after {
  content: " 6.3427px";
  font-size: 0.75rem;
}

._octave {
  font-size: 0.5rem;
}

._octave::after {
  content: " 5.95px";
  font-size: 0.75rem;
}

._major-ninth {
  font-size: 0.444rem;
}

._major-ninth::after {
  content: " 5.2836px";
  font-size: 0.75rem;
}

._major-tenth {
  font-size: 0.375rem;
}

._major-tenth::after {
  content: " 4.4625px";
  font-size: 0.75rem;
}

._major-eleventh {
  font-size: 0.353rem;
}

._major-eleventh::after {
  content: " 4.2007px";
  font-size: 0.75rem;
}

._major-twelve {
  font-size: 0.333rem;
}

._major-twelve::after {
  content: " 3.9627px";
  font-size: 0.75rem;
}

._double-octave {
  font-size: 0.25rem;
}

._double-octave::after {
  content: " 2.975px";
  font-size: 0.75rem;
}

.unison {
  font-size: 1rem;
}

.unison::after {
  content: " 11.9px";
  font-size: 0.75rem;
}

.minor-second {
  font-size: 1.067rem;
}

.minor-second::after {
  content: " 12.6973px";
  font-size: 0.75rem;
}

.major-second {
  font-size: 1.125rem;
}

.major-second::after {
  content: " 13.3875px";
  font-size: 0.75rem;
}

.minor-third {
  font-size: 1.2rem;
}

.minor-third::after {
  content: " 14.28px";
  font-size: 0.75rem;
}

.major-third {
  font-size: 1.25rem;
}

.major-third::after {
  content: " 14.875px";
  font-size: 0.75rem;
}

.perfect-fourth {
  font-size: 1.333rem;
}

.perfect-fourth::after {
  content: " 15.8627px";
  font-size: 0.75rem;
}

.augmented-fourth {
  font-size: 1.414rem;
}

.augmented-fourth::after {
  content: " 16.8266px";
  font-size: 0.75rem;
}

.perfect-fifth {
  font-size: 1.5rem;
}

.perfect-fifth::after {
  content: " 17.85px";
  font-size: 0.75rem;
}

.minor-sixth {
  font-size: 1.6rem;
}

.minor-sixth::after {
  content: " 19.04px";
  font-size: 0.75rem;
}

.golden {
  font-size: 1.618rem;
}

.golden::after {
  content: " 19.2542px";
  font-size: 0.75rem;
}

.major-sixth {
  font-size: 1.732rem;
}

.major-sixth::after {
  content: " 20.6108px";
  font-size: 0.75rem;
}

.minor-seventh {
  font-size: 1.778rem;
}

.minor-seventh::after {
  content: " 21.1582px";
  font-size: 0.75rem;
}

.major-seventh {
  font-size: 1.875rem;
}

.major-seventh::after {
  content: " 22.3125px";
  font-size: 0.75rem;
}

.octave {
  font-size: 2rem;
}

.octave::after {
  content: " 23.8px";
  font-size: 0.75rem;
}

.major-ninth {
  font-size: 2.25rem;
}

.major-ninth::after {
  content: " 26.775px";
  font-size: 0.75rem;
}

.major-tenth {
  font-size: 2.667rem;
}

.major-tenth::after {
  content: " 31.7373px";
  font-size: 0.75rem;
}

.major-eleventh {
  font-size: 2.833rem;
}

.major-eleventh::after {
  content: " 33.7127px";
  font-size: 0.75rem;
}

.major-twelve {
  font-size: 3rem;
}

.major-twelve::after {
  content: " 35.7px";
  font-size: 0.75rem;
}

.double-octave {
  font-size: 4rem;
}

.double-octave::after {
  content: " 47.6px";
  font-size: 0.75rem;
}

.third-octave {
  font-size: 6rem;
}

.third-octave::after {
  content: " 71.4px";
  font-size: 0.75rem;
}

.fourth-octave {
  font-size: 8rem;
}

.fourth-octave::after {
  content: " 95.2px";
  font-size: 0.75rem;
}

:root {
  --primary: hsla(300, 93%, 12%, 1);
  --on-primary: hsla(300, 93%, 85%, 1);
  --secondary: hsla(120, 94%, 33%, 1);
  --on-secondary: hsla(120, 94%, 85%, 1);
  --tertiary: hsla(120, 90%, 37%, 1);
  --on-tertiary: hsla(120, 90%, 85%, 1);
  --neutral: hsla(0, 0%, 50%, 1);
  --on-neutral: hsla(0, 0%, 85%, 1);
  --error: hsla(0, 100%, 50%, 1);
  --on-error: hsla(0, 100%, 85%, 1);
  --warning: hsla(50, 100%, 50%, 1);
  --on-warning: hsla(50, 100%, 15%, 1);
  --info: hsla(210, 100%, 50%, 1);
  --on-info: hsla(210, 100%, 15%, 1);
  --success: hsla(110, 100%, 50%, 1);
  --on-success: hsla(110, 100%, 15%, 1);
  --bright: hsla(0, 0%, 100%, 1);
  --on-bright: hsla(0, 0%, 15%, 1);
  --dark: hsla(0, 0%, 0%, 1);
  --on-dark: hsla(0, 0%, 85%, 1);
  --shadow: hsla(0, 0%, 0%, 0.5);
  --fontSize: 16px;
  --default: 1rem;
  --big: 2rem;
  --small: 0.75rem;
}

@font-face {
  font-family: "Barlow";
  src: url(../fonts/Barlow/Barlow-Thin.ttf) format("ttf");
  font-style: normal;
  font-weight: 100;
}
@font-face {
  font-family: "Barlow";
  src: url(../fonts/Barlow/Barlow-ExtraLight.ttf) format("ttf");
  font-style: normal;
  font-weight: 200;
}
@font-face {
  font-family: "Barlow";
  src: url(../fonts/Barlow/Barlow-Light.ttf) format("ttf");
  font-style: normal;
  font-weight: 300;
}
@font-face {
  font-family: "Barlow";
  src: url(../fonts/Barlow/Barlow-Regular.ttf) format("ttf");
  font-style: normal;
  font-weight: 400;
}
@font-face {
  font-family: "Barlow";
  src: url(../fonts/Barlow/Barlow-Medium.ttf) format("ttf");
  font-style: normal;
  font-weight: 500;
}
@font-face {
  font-family: "Barlow";
  src: url(../fonts/Barlow/Barlow-SemiBold.ttf) format("ttf");
  font-style: normal;
  font-weight: 600;
}
@font-face {
  font-family: "Barlow";
  src: url(../fonts/Barlow/Barlow-Bold.ttf) format("ttf");
  font-style: normal;
  font-weight: 700;
}
@font-face {
  font-family: "Barlow";
  src: url(../fonts/Barlow/Barlow-ExtraBold.ttf) format("ttf");
  font-style: normal;
  font-weight: 800;
}
@font-face {
  font-family: "Barlow";
  src: url(../fonts/Barlow/Barlow-Black.ttf) format("ttf");
  font-style: normal;
  font-weight: 900;
}
@font-face {
  font-family: "Barlow";
  src: url(../fonts/Barlow/Barlow-Thin.ttf) format("ttf");
  font-style: normal;
  font-weight: 100;
}
@font-face {
  font-family: "Barlow";
  src: url(../fonts/Barlow/Barlow-ExtraLight.ttf) format("ttf");
  font-style: normal;
  font-weight: 200;
}
@font-face {
  font-family: "Barlow";
  src: url(../fonts/Barlow/Barlow-LightItalic.ttf) format("ttf");
  font-style: italic;
  font-weight: 300;
}
@font-face {
  font-family: "Barlow";
  src: url(../fonts/Barlow/Barlow-RegularItalic.ttf) format("ttf");
  font-style: italic;
  font-weight: 400;
}
@font-face {
  font-family: "Barlow";
  src: url(../fonts/Barlow/Barlow-MediumItalic.ttf) format("ttf");
  font-style: italic;
  font-weight: 500;
}
@font-face {
  font-family: "Barlow";
  src: url(../fonts/Barlow/Barlow-SemiBoldItalic.ttf) format("ttf");
  font-style: italic;
  font-weight: 600;
}
@font-face {
  font-family: "Barlow";
  src: url(../fonts/Barlow/Barlow-BoldItalic.ttf) format("ttf");
  font-style: italic;
  font-weight: 700;
}
@font-face {
  font-family: "Barlow";
  src: url(../fonts/Barlow/Barlow-ExtraBoldItalic.ttf) format("ttf");
  font-style: italic;
  font-weight: 800;
}
@font-face {
  font-family: "Barlow";
  src: url(../fonts/Barlow/Barlow-BlackItalic.ttf) format("ttf");
  font-style: italic;
  font-weight: 900;
}
html {
  font-family: "Silka", sans-serif;
  font-size: 11.9px;
  line-height: 1.414;
  font-weight: 400;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: 500;
}

tt,
code,
kbd,
samp {
  font-family: "Silka Mono", monospace;
}

nav ol,
nav ul {
  display: flex;
  flex-direction: row;
  list-style-type: none;
  margin: 0;
  padding: 0;
}

body {
  margin: 1rem;
}

body > nav:nth-child(2) {
  display: block;
  position: fixed;
  left: 0 !important;
  top: 0 !important;
  font-size: 0.75rem !important;
  z-index: 1000;
  box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.3);
  background: hsla(0, 0%, 100%, 0.85);
}
body > nav:nth-child(2) li {
  transition-property: color, background;
  transition-duration: 300ms;
  transition-timing-function: ease-in-out;
  transition-delay: 0s;
  padding: 0.5rem;
}
body > nav:nth-child(2) a:link,
body > nav:nth-child(2) a:visited {
  color: black;
  text-decoration: none;
}
body > nav:nth-child(2) li:has(a:hover) {
  background: black;
}
body > nav:nth-child(2) li:has(a:hover) a {
  color: white;
}
body > nav:nth-child(2) + * {
  margin-top: 5rem;
}

section {
  border: 1px dotted tomato;
  margin-block: 1rem;
}

.sr-only {
  word-wrap: normal;
  position: absolute;
  left: -20000px;
  height: 0.0625rem;
  width: 0.0625rem;
  margin: -0.0625rem;
  padding: 0;
  border: 0;
  overflow: hidden;
  clip: rect(0.0625rem, 0.0625rem, 0.0625rem, 0.0625rem);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
}

.sr-hidden,
.hidden {
  display: none;
}

.sr-focus:focus {
  display: block;
  z-index: 1;
  position: fixed;
  top: 0;
  text-align: center;
  word-wrap: normal !important;
  height: 5rem;
  width: 100vw;
  padding: 1rem;
  clip: unset;
  -webkit-clip-path: inset(0);
  clip-path: inset(0%);
  font-size: var(--big);
  background-color: var(--bright);
}

[tabindex] {
  outline: 2px dotted hsla(0, 0%, 0%, 0.1);
  outline-offset: 4px;
}

svg [tabindex] {
  outline: none;
}

.visually-hidden:not(:focus):not(:active) {
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.invisible {
  display: none !important;
}

time {
  display: block;
}

@keyframes focus-animation {
  0% {
    outline-offset: 0px;
    outline-width: 5px;
    outline-color: rgb(3, 139, 250);
  }
  90% {
    outline-offset: 5px;
    outline-width: 5px;
    outline-color: rgba(3, 139, 250, 0.1);
  }
  100% {
    outline-offset: 0;
    outline-width: 0;
    outline-color: transparent;
  }
}
*:focus {
  animation: focus-animation 1s;
  outline-style: solid;
}

.mouseenter {
  background: hsla(210, 50%, 50%, 0.125);
}

.blurred-vision {
  filter: blur(2px);
}

.achromatopsia {
  filter: url('data:image/svg+xml,      <svg xmlns="http://www.w3.org/2000/svg">        <filter id="achromatopsia">          <feColorMatrix values="0.213  0.715  0.072  0.000  0.000                                 0.213  0.715  0.072  0.000  0.000                                 0.213  0.715  0.072  0.000  0.000                                 0.000  0.000  0.000  1.000  0.000" />        </filter>      </svg>#achromatopsia');
}

.deuteranopia {
  filter: url('data:image/svg+xml,      <svg xmlns="http://www.w3.org/2000/svg">        <filter id="deuteranopia">          <feColorMatrix values="0.367  0.861 -0.228  0.000  0.000                                 0.280  0.673  0.047  0.000  0.000                                -0.012  0.043  0.969  0.000  0.000                                 0.000  0.000  0.000  1.000  0.000" />        </filter>      </svg>#deuteranopia');
}

.protanopia {
  filter: url('data:image/svg+xml,      <svg xmlns="http://www.w3.org/2000/svg">        <filter id="protanopia">        <feColorMatrix values="0.152  1.053 -0.205  0.000  0.000                               0.115  0.786  0.099  0.000  0.000                              -0.004 -0.048  1.052  0.000  0.000                               0.000  0.000  0.000  1.000  0.000" />        </filter>      </svg>#protanopia');
}

.tritanopia {
  filter: url('data:image/svg+xml,      <svg xmlns="http://www.w3.org/2000/svg">        <filter id="tritanopia">        <feColorMatrix values="1.256 -0.077 -0.179  0.000  0.000                              -0.078  0.931  0.148  0.000  0.000                               0.005  0.691  0.304  0.000  0.000                               0.000  0.000  0.000  1.000  0.000" />        </filter>      </svg>#tritanopia');
}

.visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip-path: rect(0, 0, 0, 0);
  border: 0;
}

.visually-hidden-focusable:active,
.visually-hidden-focusable:focus {
  position: static;
  width: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  clip-path: auto;
}

.visually-hidden:has(a:focus, a:active) {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  position: absolute;
  left: 0;
  top: 0;
  width: 100vw;
  height: 100vh;
  z-index: 1001;
  background-color: lightgrey;
  color: black;
  font-size: 3rem;
}
.visually-hidden:has(a:focus, a:active) ul,
.visually-hidden:has(a:focus, a:active) ol {
  list-style-type: none;
  margin: 0;
  padding: 0;
}
.visually-hidden:has(a:focus, a:active) li:has(a:focus) {
  position: static;
  width: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  clip-path: auto;
  border: 2px dotted red;
}
.visually-hidden:has(a:focus, a:active) li:has(a:not(:focus)) {
  position: absolute;
  left: -9999px;
}

table,
th,
td {
  border: 1px dotted black;
}

#skip-links a {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip-path: rect(0, 0, 0, 0);
  border: 0;
}

#skip-links:has(:focus) a:focus {
  display: flex;
  justify-content: center;
  align-items: center;
  position: fixed;
  left: 0;
  top: 0;
  width: 100vw;
  height: 100vh;
  z-index: 1001;
  background-color: hsla(0, 0%, 100%, 0.85);
  color: black;
  font-size: 3rem;
  margin: 0;
  overflow: visible;
  clip-path: auto;
  text-decoration: none;
}

[aria-activedescendant],
[aria-atomic],
[aria-autocomplete],
[aria-busy],
[aria-checked],
[aria-controls],
[aria-current],
[aria-describedby],
[aria-disabled],
[aria-dropeffect],
[aria-expanded],
[aria-flowto],
[aria-grabbed],
[aria-haspopup],
[aria-hidden],
[aria-invalid],
[aria-label],
[aria-labelledby],
[aria-level],
[aria-live],
[aria-multiline],
[aria-multiselectable],
[aria-orientation],
[aria-owns],
[aria-posinset],
[aria-pressed],
[aria-selected],
[aria-readonly],
[aria-relevant],
[aria-atomic],
[aria-required],
[aria-selected],
[aria-checked],
[aria-pressed],
[aria-setsize],
[aria-posinset],
[aria-sort],
[aria-valuemax],
[aria-valuemin],
[aria-valuenow],
[aria-valuetext] {
  outline: 3px dotted hsla(200, 100%, 25%, 0.85);
  outline-offset: 1px;
}
[aria-activedescendant]::before,
[aria-atomic]::before,
[aria-autocomplete]::before,
[aria-busy]::before,
[aria-checked]::before,
[aria-controls]::before,
[aria-current]::before,
[aria-describedby]::before,
[aria-disabled]::before,
[aria-dropeffect]::before,
[aria-expanded]::before,
[aria-flowto]::before,
[aria-grabbed]::before,
[aria-haspopup]::before,
[aria-hidden]::before,
[aria-invalid]::before,
[aria-label]::before,
[aria-labelledby]::before,
[aria-level]::before,
[aria-live]::before,
[aria-multiline]::before,
[aria-multiselectable]::before,
[aria-orientation]::before,
[aria-owns]::before,
[aria-posinset]::before,
[aria-pressed]::before,
[aria-selected]::before,
[aria-readonly]::before,
[aria-relevant]::before,
[aria-atomic]::before,
[aria-required]::before,
[aria-selected]::before,
[aria-checked]::before,
[aria-pressed]::before,
[aria-setsize]::before,
[aria-posinset]::before,
[aria-sort]::before,
[aria-valuemax]::before,
[aria-valuemin]::before,
[aria-valuenow]::before,
[aria-valuetext]::before {
  display: block;
  position: absolute;
  right: 1rem;
  padding: 0.2rem;
  font-size: 0.8rem;
  color: hsla(200, 100%, 100%, 0.85);
  background: hsla(200, 100%, 25%, 0.85);
}

[aria-activedescendant]::before {
  content: attr(aria-activedescendant);
}

[aria-atomic]::before {
  content: attr(aria-atomic);
}

[aria-autocomplete]::before {
  content: attr(aria-autocomplete);
}

[aria-busy]::before {
  content: attr(aria-busy);
}

[aria-checked]::before {
  content: attr(aria-checked);
}

[aria-controls]::before {
  content: attr(aria-controls);
}

[aria-current]::before {
  content: attr(aria-current);
}

[aria-describedby]::before {
  content: attr(aria-describedby);
}

[aria-disabled]::before {
  content: attr(aria-disabled);
}

[aria-dropeffect]::before {
  content: attr(aria-dropeffect);
}

[aria-expanded]::before {
  content: attr(aria-expanded);
}

[aria-flowto]::before {
  content: attr(aria-flowto);
}

[aria-grabbed]::before {
  content: attr(aria-grabbed);
}

[aria-haspopup]::before {
  content: attr(aria-haspopup);
}

[aria-hidden]::before {
  content: attr(aria-hidden);
}

[aria-invalid]::before {
  content: attr(aria-invalid);
}

[aria-label]::before {
  content: attr(aria-label);
}

[aria-labelledby]::before {
  content: attr(aria-labelledby);
}

[aria-level]::before {
  content: attr(aria-level);
}

[aria-live]::before {
  content: attr(aria-live);
}

[aria-multiline]::before {
  content: attr(aria-multiline);
}

[aria-multiselectable]::before {
  content: attr(aria-multiselectable);
}

[aria-orientation]::before {
  content: attr(aria-orientation);
}

[aria-owns]::before {
  content: attr(aria-owns);
}

[aria-posinset]::before {
  content: attr(aria-posinset);
}

[aria-pressed]::before {
  content: attr(aria-pressed);
}

[aria-selected]::before {
  content: attr(aria-selected);
}

[aria-readonly]::before {
  content: attr(aria-readonly);
}

[aria-relevant]::before {
  content: attr(aria-relevant);
}

[aria-atomic]::before {
  content: attr(aria-atomic);
}

[aria-required]::before {
  content: attr(aria-required);
}

[aria-selected]::before {
  content: attr(aria-selected);
}

[aria-checked]::before {
  content: attr(aria-checked);
}

[aria-pressed]::before {
  content: attr(aria-pressed);
}

[aria-setsize]::before {
  content: attr(aria-setsize);
}

[aria-posinset]::before {
  content: attr(aria-posinset);
}

[aria-sort]::before {
  content: attr(aria-sort);
}

[aria-valuemax]::before {
  content: attr(aria-valuemax);
}

[aria-valuemin]::before {
  content: attr(aria-valuemin);
}

[aria-valuenow]::before {
  content: attr(aria-valuenow);
}

[aria-valuetext]:before {
  content: attr(aria-valuetext);
}